services:
  weaviate:
    container_name: weaviate
    command:
      - --host
      - 0.0.0.0
      - --port
      - "8080"
      - --scheme
      - http
    image: cr.weaviate.io/semitechnologies/weaviate:1.27.0
    ports:
      - 8080:8080
      - 50051:50051
    volumes:
      - ./weaviate_data:/var/lib/weaviate
    restart: on-failure:0
    environment:
      CLIP_INFERENCE_API: "http://multi2vec-clip:8080"
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
      DEFAULT_VECTORIZER_MODULE: "multi2vec-clip"
      ENABLE_MODULES: "multi2vec-clip"
      CLUSTER_HOSTNAME: "node1"
    healthcheck:
      test: wget --no-verbose --tries=3 --spider http://localhost:8080/v1/.well-known/ready || exit 1
      interval: 10s
      retries: 10
      start_period: 30s
      timeout: 10s
  multi2vec-clip:
    container_name: multi2vec-clip
    image: cr.weaviate.io/semitechnologies/multi2vec-clip:xlm-roberta-base-ViT-B-32-laion5b_s13b_b90k
    environment:
      ENABLE_CUDA: "1"
      NVIDIA_VISIBLE_DEVICES: all
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
  postgres:
    container_name: postgres
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: "postgres"
    ports:
      - 5433:5432
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U 'django-admin' -d 'hakaton_db'"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
  minio:
    image: minio/minio
    command: minio server --console-address ":9001" /data
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./minio_data:/data
  django:
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      weaviate:
        condition: service_healthy
        restart: true

    container_name: django
    build:
      context: ./backend
    ports:
      - 8000:8000
    environment:
      - PYTHONUNBUFFERED=1
    command: python manage.py runserver 0.0.0.0:8000
